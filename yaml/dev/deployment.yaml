---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJ0ZXN0cmdzdHIuYXp1cmVjci5pbyI6eyJ1c2VybmFtZSI6ImViNGZlMjM4LTQ5OTUtNGI3Yy04ZDIzLTc2YmIxZGU5ZmMxZiIsInBhc3N3b3JkIjoiZk10N1F+aW1BNGwyMnktLW9IcmRfWE1pQjVMUnlpeVVqa0FYSSIsImVtYWlsIjoic3Jpbml2YXNhbkBvcHNlcmEuaW8iLCJhdXRoIjoiWldJMFptVXlNemd0TkRrNU5TMDBZamRqTFRoa01qTXROelppWWpGa1pUbG1ZekZtT21aTmREZFJmbWx0UVRSc01qSjVMUzF2U0hKa1gxaE5hVUkxVEZKNWFYbFZhbXRCV0VrPSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  name: springboot-secret
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Namespace
metadata:
  name: imageupdate
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imageupdate-demo
  namespace: imageupdate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      imagePullSecrets:
        - name: springboot-secret
      containers:
        - name: back-end
          image: 440953937617.dkr.ecr.us-east-2.amazonaws.com/spring-boot-repo:6d6a23d866397cbe264a946cedf885d128344bb7
          imagePullPolicy: Always
          ports:
            - containerPort: 8072
          env:
          - name: DOCKER_ENV
            value: "dev"

---
#Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: imageupdate-demo
  name: imageupdate-demo
  namespace: imageupdate
spec:
  ports:
  - name: http
    port: 8072
    protocol: TCP
    targetPort: http
  selector:
    app: web
  sessionAffinity: None
  type: NodePort

---
# Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app.kubernetes.io/name: imageupdate-demo
  name: imageupdate-demo
  namespace: imageupdate
spec:
  rules:
  - host: imageupdate.nawaz-demo.opsera.io
    http:
      paths:
      - backend:
          serviceName: imageupdate-demo
          servicePort: 8072
        path: /
---
